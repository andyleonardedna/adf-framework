{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dfadffw"
		},
		"azSqlPipelineMetadata_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'azSqlPipelineMetadata'"
		},
		"azSqlPipelineMetadata_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "svadffw.database.windows.net"
		},
		"azSqlPipelineMetadata_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "dbadffw"
		},
		"azSqlPipelineMetadata_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminandy"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/child1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-14T16:48:04Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/child2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-14T16:48:04Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/child3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-14T16:48:04Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/child4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-14T16:48:04Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/parent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Child1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "child1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/child1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/parent_REST_metadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach Child Pipeline",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get pipeline list",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get pipeline list').output.resultSets[0].rows",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Web Execute Pipeline via REST",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Record ApplicationPipeline Start",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "POST",
										"headers": {},
										"url": {
											"value": "@concat('https://management.azure.com/subscriptions/',pipeline().globalParameters.subscriptionId,'/resourceGroups/',pipeline().globalParameters.resourceGroupName,'/providers/Microsoft.DataFactory/factories/',pipeline().DataFactory,'/pipelines/',item().pipelineName,'/createRun?api-version=2018-06-01')",
											"type": "Expression"
										},
										"body": {
											"message": "Executing child pipeline"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.azure.com"
										}
									}
								},
								{
									"name": "Record ApplicationPipeline Start",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "azSqlPipelineMetadata",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"parameters": [
													{
														"name": "executionid",
														"type": "Int32",
														"value": {
															"value": "@activity('Record Start').output.resultSets[0].rows[0].id",
															"type": "Expression"
														},
														"direction": "Input"
													},
													{
														"name": "applicationpipelineId",
														"type": "Int32",
														"value": {
															"value": "@item().applicationpipelineId",
															"type": "Expression"
														},
														"direction": "Input"
													},
													{
														"name": "startTime",
														"type": "Datetime",
														"value": {
															"value": "@utcNow()",
															"type": "Expression"
														},
														"direction": "Input"
													},
													{
														"name": "status",
														"type": "String",
														"value": "Started",
														"direction": "Input"
													},
													{
														"name": "id",
														"type": "Int32",
														"value": "-1",
														"direction": "Output"
													}
												],
												"type": "Query",
												"text": "Insert into em.applicationPipelineInstance\n(executionid\n, applicationpipelineId\n, startTime\n, [status])\nOutput inserted.id\nValues\n(@executionid\n, @applicationpipelineId\n, @startTime\n, @status)"
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "Get pipeline list",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Record Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "azSqlPipelineMetadata",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"parameters": [
										{
											"name": "appName",
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.applicationName",
												"type": "Expression"
											},
											"direction": "Input"
										}
									],
									"type": "Query",
									"text": "exec fw.getApplicationPipelines @appName\n"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Record Start",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "azSqlPipelineMetadata",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"parameters": [
										{
											"name": "CurrentTime",
											"type": "Datetime",
											"value": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"direction": "Input"
										},
										{
											"name": "Status",
											"type": "String",
											"value": "Started",
											"direction": "Input"
										},
										{
											"name": "applicationName",
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.applicationName",
												"type": "Expression"
											},
											"direction": "Input"
										},
										{
											"name": "pipelineName",
											"type": "String",
											"value": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"direction": "Input"
										},
										{
											"name": "id",
											"type": "Int32",
											"value": "0",
											"direction": "Output"
										}
									],
									"type": "Query",
									"text": "Insert Into em.executionInstance\n(applicationName, pipelineName, StartTime, [status])\nOutput inserted.id\nValues (@applicationName, @pipelineName, @CurrentTime, @Status)"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Record Succeeded",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "ForEach Child Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "azSqlPipelineMetadata",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"parameters": [
										{
											"name": "endTime",
											"type": "Datetime",
											"value": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"direction": "Input"
										},
										{
											"name": "status",
											"type": "String",
											"value": "Succeeded",
											"direction": "Input"
										},
										{
											"name": "id",
											"type": "Int32",
											"value": {
												"value": "@activity('Record Start').output.resultSets[0].rows[0].id",
												"type": "Expression"
											},
											"direction": "Input"
										}
									],
									"type": "Query",
									"text": "Update em.executionInstance\nSet endTime = @endTime\n   , status = @status\nWhere id = @id"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Record Failed",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "ForEach Child Pipeline",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "azSqlPipelineMetadata",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"parameters": [
										{
											"name": "endTime",
											"type": "Datetime",
											"value": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"direction": "Input"
										},
										{
											"name": "status",
											"type": "String",
											"value": "Failed",
											"direction": "Input"
										},
										{
											"name": "id",
											"type": "Int32",
											"value": {
												"value": "@activity('Record Start').output.resultSets[0].rows[0].id",
												"type": "Expression"
											},
											"direction": "Input"
										}
									],
									"type": "Query",
									"text": "Update em.executionInstance\nSet endTime = @endTime\n   , status = @status\nWhere id = @id"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"applicationName": {
						"type": "string",
						"defaultValue": "app Two"
					}
				},
				"variables": {
					"pipelineNameArray": {
						"type": "Array",
						"defaultValue": [
							"child1",
							"child2",
							"child3"
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-14T18:03:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azSqlPipelineMetadata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineFail')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fail1",
						"type": "Fail",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"message": "I failed!",
							"errorCode": "-1001"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pipelineFail",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipelineFail')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azSqlPipelineMetadata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('azSqlPipelineMetadata_properties_typeProperties_server')]",
					"database": "[parameters('azSqlPipelineMetadata_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('azSqlPipelineMetadata_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('azSqlPipelineMetadata_password')]"
					}
				}
			},
			"dependsOn": []
		}
	]
}